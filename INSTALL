Author: Barzan Mozafari (mozafari AT umich.edu)
http://cliffguard.org

Table of Contents:
    Requirements
    Installation
    Developer Guide

********************************************
* Requirements
********************************************

- Java 7+
- Vertica 6+ or Microsoft SQL Server xx (only necessary for using the designer tool)
- SWIG and GLPK (only for developers)



********************************************
* Installation
********************************************
Attention: Before you install cliffguard, make sure $JAVA_HOME is set.

Untar the package, then:

$ cd TOP_LEVEL_DIRECTORY
$ cd VLogProcessor
$ ant
$ ant jar


After this step, the binary file (a JAR file) will be created in

TOP_LEVEL_DIRECTORY/VLogProcessor/build/VLogProcessor.jar

At this point, CliffGuard has been successfully compiled.
Refer to the README documentation to learn how you can use various tools that are included in the CliffGuard package.

********************************************
*     Developer Guide (Users should skip these steps)
********************************************

WARNING: This developer guide is only intended for academic researchers. To follow the instructions below you need to be using the academic version (the academic version is different from the public oepn-source version that is available at http://CliffGuard.org). The academic version is not open-source and is shared on a per-request basis. If you wish to access the academic version, please contact us at mozafari <AT> umich.edu.

---------------------------------------------
--- How to enable Vertica to empty the OS cache:
---------------------------------------------


1. Run the following command as "dbadmin":

	TOP_LEVEL_DIRECTORY/scripts/install_stored_procedures.sh

2. Run the following as root:

	sudo chown root:root restartDB
	sudo chmod u+s restartDB


3. Test it by running the following command in vsql:

	vsql> select barzan_empty_cache();

and see if it prints out root! 

	INFO 4427:  Procedure reported:
	root

	 barzan_empty_cache 
	--------------------
			  0
	(1 row)

---------------------------------------------
----  Importing into Eclipse
---------------------------------------------

How to set up the project into Eclipse

1. Create a new project (File->New->Project) then choose "Java Project from Existing Ant Buildfile". Then choose the build.xml from tsqlparser directory.

2. Create a new project (File->New->Project) then choose "Java Project from Existing Ant Buildfile". Then choose the build.xml from VLogProcessor directory.

3. Right click on the VLogProcessor project in Eclipse, choose "Build Path" and then "Configure Build Path", then go to the "Projects" tab and add "tsqlparser" project as a Required project for the "VLogProcessor" project. 

---------------------------------------------
----  Installing SWIG and GLPK
---------------------------------------------

You only need to install SWIG and GLPK if you are looking to use some of the advanced features in CliffGuard. Not recommended for beginner users.

1. Make sure "swig" is installed, by trying:
$ swig
To install":
sudo yum install swig

2. Compile GLPK

				cd TOP_LEVEL_DIRECTORY/VLogProcessor/libs/
				tar xvzf glpk-4.50.tar.gz
				cd glpk-4.50
				./configure 
				make
				sudo make install

3. Compile the GPLK-JAVA. 
				cd TOP_LEVEL_DIRECTORY/VLogProcessor/libs/
				tar xvzf libglpk-java-1.0.28.tar.gz
				cd libglpk-java-1.0.28

3.1. Run the configure:
Set the CPPFLAGS and SWIGFLAGS on your system accordingly (to a directory that contains jni.h and jni_md.h). Also, set LDFLAGS to a directory that contains files such as libglpk.a  libglpk.la  libglpk.so  libglpk.so.35  libglpk.so.35.0.0):

For instance, on CentOS:
				./configure CPPFLAGS=-I/usr/lib/jvm/java-1.6.0/include/ SWIGFLAGS=-I/usr/lib/jvm/java-1.6.0/include/ LDFLAGS=-L/usr/local/lib

On Mac:
				./configure CPPFLAGS=-I/System/Library/Frameworks/JavaVM.framework/Headers SWIGFLAGS=-I/System/Library/Frameworks/JavaVM.framework/Headers LDFLAGS=-L/opt/lib

Note: if you still get an error that "configure: error: jni.h not found", trying finding "jni_md.h" and copying it next to the "jni.h" file, e.g. you might need to do:
				cp /usr/java/jdk1.7.0_11/include/linux/jni_md.h /usr/lib/jvm/java-1.6.0-openjdk-1.6.0.0.x86_64/include/ 


3.2: compile and install:

make
make check
sudo make install
sudo ldconfig


********************************************
*
********************************************


